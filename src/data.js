export const products = [
	{
		id: 1,
		img: 'https://firebasestorage.googleapis.com/v0/b/portfolio-pauljeon.appspot.com/o/ecommerce-1.png?alt=media&token=5782cf9f-aacb-4c41-8326-adb9ab201dc9',
		link: 'https://pauljeonn-ecommerce.herokuapp.com/',
		title: 'LIEU (온라인쇼핑몰)',
		team: '개인 프로젝트',
		desc: 'MERN Stack을 사용하여 온라인 쇼핑몰 웹사이트를 제작하였습니다. Redux를 통해 전역 상태관리를 하였고, styled-components를 통해 컴포넌트들을 동적으로 자유롭게 스타일링 할 수 있었습니다. 백엔드 동작원리에 대해 많이 이해하게 되었으며 Node.js에서 MongoDB와 연동하여 서버를 구축하고 사용하는 법을 배웠습니다. 풀스택으로 앱이 작동하는 모든 과정을 체험해볼 수 있었습니다.',
		tech: [
			'React',
			'Redux',
			'styled-components',
			'Node.js',
			'Express',
			'MongoDB',
			'Heroku',
		],
		front: 'React, Redux, styled-components',
		back: ' Node.js, Express, MongoDB',
		deploy: 'Heroku',
		github: 'https://github.com/pauljeonn/react-ecommerce',
	},
	{
		id: 2,
		img: 'https://firebasestorage.googleapis.com/v0/b/portfolio-pauljeon.appspot.com/o/chatty-1.png?alt=media&token=be7d9976-35d0-4d2d-bfb9-a4e7df3893e7',
		link: 'https://pauljeonn-chatty.netlify.app/',
		title: 'Chatty (채팅앱)',
		team: '개인 프로젝트',
		desc: 'Socket.io를 사용하여 구현한 채팅앱 입니다. 사용자 이름과 채팅방 이름을 입력하여 채팅을 시작할 수 있으며 동일한 채팅방에 접속한 여러명의 사용자들이 동시에 사용 가능합니다. Real-time communication에 한계를 가지는 HTTP와는 달리 양방향 서버와 클라이언트 사이에 지속적으로 연결된 TCP 라인을 통해 실시간 통신을 가능하게 해주는 Websocket 구조의 장점에 대해 배울 수 있었습니다. 또한 기존의 Websocket과 차별점을 갖는 Socket.io만의 브로드캐스팅 기능은 여러 사람이 같은 장소에서 메시지를 주고받는 채팅앱을 구현할때 특히 유용했습니다. Origin을 지정하여 CORS 이슈를 간편하게 핸들링할 수 있는 부분도 Socket.io의 장점 중 하나라고 생각합니다.',
		tech: [
			'React',
			'styled-components',
			'Socket.io',
			'Node.js',
			'Express',
			'Heroku',
			'Netlify',
		],
		github: 'https://github.com/pauljeonn/react-chat',
	},
	{
		id: 3,
		img: 'https://firebasestorage.googleapis.com/v0/b/portfolio-pauljeon.appspot.com/o/covid-1.png?alt=media&token=13044dbd-e989-426d-b95d-26c629aa3c70',
		link: 'https://react-covid-app-cccc4.web.app/',
		title: '코로나19 세계 현황',
		team: '개인 프로젝트',
		desc: '매일 업데이트되는 세계 코로나 현황을 보여주는 웹사이트 입니다. 사용자가 선택한 나라들의 신규 확진자의 수를 차트를 통해 한눈에 비교할 수 있습니다. Chart.js 라이브러리를 사용하여 바 차트 형태로 데이터 시각화를 구현하였고 Emotion 라이브러리를 사용하여 styled-components 문법으로 스타일링 하였습니다.',
		tech: ['TypeScript', 'React', 'Emotion', 'Chart.js', 'Firebase'],
		front: 'React(TypeScript), Emotion, Chart.js',
		deploy: 'Firebase',
		github: 'https://github.com/pauljeonn/react-covid-app',
	},
	{
		id: 4,
		img: 'https://firebasestorage.googleapis.com/v0/b/portfolio-pauljeon.appspot.com/o/news-2.png?alt=media&token=a5cb3612-c03f-450c-afb4-952b4c02eb77',
		link: 'https://pauljeonn-news.vercel.app/',
		title: 'Daily News (뉴스앱)',
		team: '개인 프로젝트',
		desc: 'News API라는 사이트에서 무료로 매일 업데이트되는 최신 뉴스 API로 구현한 데일리 뉴스 웹사이트 입니다. 다양한 언론사의 최신 한국 뉴스를 분야별로 제공하도록 구현하였고 해외 기사도 영문으로 제공합니다. SSR, 동적 라우팅, CSS 모듈 등 Next.js의 장점들을 경험해볼 수 있는 프로젝트 였습니다.',
		tech: ['Next.js', 'Vercel'],
		github: 'https://github.com/pauljeonn/nextjs-news',
	},
	{
		id: 5,
		img: 'https://firebasestorage.googleapis.com/v0/b/portfolio-pauljeon.appspot.com/o/todo-1.png?alt=media&token=7e03eb5f-edd0-41f7-bcb0-20ec3995b8c5',
		link: 'https://todolist-41d4a.web.app',
		title: 'Todo List App',
		team: '개인 프로젝트',
		desc: 'React로 제작한 할일 관리 앱입니다. React Hooks와 Context API를 사용하여 리액트에서 상태관리하는 방법을 배울 수 있었습니다. 스타일링 측면에서는 Sass와 styled-components를 둘 다 사용해보며 각 css 전처리기의 특징 및 장단점을 비교해볼 수 있었습니다.',
		tech: ['React', 'Sass', 'styled-components', 'Firebase'],
		front: 'React, Sass, styled-components',
		deploy: 'Firebase',
		github: 'https://github.com/pauljeonn/todo-app',
	},
	// {
	// 	id: 6,
	// 	img: 'https://firebasestorage.googleapis.com/v0/b/portfolio-pauljeon.appspot.com/o/nike.png?alt=media&token=13f2587a-202d-4307-b2fb-ce0295d8f6cf',
	// 	link: 'https://www.nike.com',
	// 	title: 'DaeChae',
	// 	team: '2인 팀프로젝트',
	// 	desc: '친구와 협업하여 친환경 제품을 추천해주는 플랫폼을 제작해보았습니다.',
	// 	front: 'React, Sass',
	// 	back: 'Firebase Functions',
	// 	deploy: 'Firebase',
	// 	github: 'https://github.com/pauljeonn/daechae',
	// },
	// {
	// 	id: 7,
	// 	img: 'https://firebasestorage.googleapis.com/v0/b/portfolio-pauljeon.appspot.com/o/portfolio-1.png?alt=media&token=cf4fe777-27b4-465d-8d25-0d35df3718b7',
	// 	link: 'https://portfolio-pauljeon.web.app',
	// 	title: 'Portfolio Website',
	// 	team: '개인 프로젝트',
	// 	desc: '개인 포트폴리오 웹사이트 용도로 React를 사용하여 제작하였습니다. 포트폴리오 목적에 부합하도록 최대한 깔끔하게 디자인하였고, Context API를 사용하여 다크 모드 기능도 구현해보았습니다.',
	// 	front: 'React, Sass',
	// 	deploy: 'Firebase',
	// 	github: 'https://github.com/pauljeonn/portfolio-pauljeon',
	// },
];
